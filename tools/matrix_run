#!/bin/bash

cd $(dirname "$0")
cd ..

if [ "$1" = "-q" ]; then
    quick=yes
    shift
fi

module="$1"
module=${module%.py}
target=/Volumes/CIRCUITPY
unalias -a

if [ -z "$module" ]; then
    echo "Usage: $0 [-q] <module>"
    echo
    echo "Runs a module on the attached CircuitPython device, using"
    echo "adafruit.rgbmatrix as the graphics driver.  Specify -q for"
    echo "a quick run (skip reinstalling data, libraries, and fonts)."
    exit 1
fi

if ! python3 -c "from $module import run"; then
    exit 1
fi

if [ ! -d "$target" ]; then
    echo "No drive found at $target.  Is a CircuitPython device connected?"
    exit 1
fi

if [ ! -d cache/lib ]; then
    echo "The cache/lib directory is missing.  Did you run tools/setup?"
    exit 1
fi

echo "Installing clock program..."
rm -rf $target/v999
mkdir $target/v999
cp *.py $target/v999

if [ -z "$quick" ]; then
    echo "Installing climateclock.json..."
    curl https://api.climateclock.world/v1/clock -o cache/climateclock.json
    mkdir -p $target/cache
    cp cache/climateclock.json $target/cache

    echo "Installing fonts..."
    cp *.pcf $target
fi

echo "Installing startup logic..."
cp boot.py code.py gpio.py $target

cat <<EOF >$target/v999/main.py
import debug

debug.mem('main1')
import matrix_frame
debug.mem('main2')
frame = matrix_frame.new_display_frame(192, 32, 16)
debug.mem('main3')

import board, gpio
debug.mem('main4')
up = gpio.Button(board.BUTTON_UP)
down = gpio.Button(board.BUTTON_DOWN)
enter = gpio.Button(board.A4)
brightness = gpio.AnalogInput(board.A1)
selector = gpio.RotaryInput(board.A2, board.A3)
debug.mem('main5')

from esp_wifi_network import EspWifiNetwork
network = EspWifiNetwork(debug=True)

from $module import run
debug.mem('main6')
run(
    frame,
    {'UP': up, 'DOWN': down, 'ENTER': enter},
    {'BRIGHTNESS': brightness, 'SELECTOR': selector}
)
run(network, frame, {'NEXT': up, 'ENTER': down}, {'BRIGHTNESS': brightness})
EOF

touch $target/v999/@VALID
touch $target/v999/@ENABLED
echo "All done!"
