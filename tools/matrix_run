#!/bin/bash -e

cd $(dirname "$0")
cd ..

if [ "$1" = -q ]; then
    quick=yes
    shift
fi

module="$1"
module=${module%.py}
target=/Volumes/CIRCUITPY
unalias -a

if [ -z "$module" ]; then
    echo "Usage: $0 [-q] <module>"
    echo
    echo "Runs a module on the attached CircuitPython device, using"
    echo "adafruit.rgbmatrix as the graphics driver.  Specify -q for"
    echo "a quick run (skip reinstalling data, libraries, and fonts)."
    exit 1
fi

echo 'Checking syntax...'
python3 <<EOF || exit 1
import os
from $module import run
for name in os.listdir():
    if name.endswith('.py'):
        compile(open(name).read(), name, 'exec')
EOF

if [ ! -d "$target" ]; then
    echo "No drive found at $target.  Is a CircuitPython device connected?"
    exit 1
fi

if [ ! -d cache/lib ]; then
    echo "The cache/lib directory is missing.  Did you run tools/setup?"
    exit 1
fi

echo 'Installing program modules...'
rm -rf $target/v999
mkdir $target/v999
cp *.py $target/v999

if [ -z '$quick' ]; then
    echo 'Installing climateclock.json...'
    curl https://api.climateclock.world/v1/clock -o cache/climateclock.json
    mkdir -p $target/cache
    cp cache/climateclock.json $target/cache

    echo 'Installing fonts...'
    cp *.pcf $target
fi

echo 'Installing startup logic...'
cp boot.py gpio.py main.py $target

cat <<EOF >$target/v999/start.py
import utils

utils.mem('start1')
from fs import FileSystem
fs = FileSystem('/')
utils.mem('start2')
from fontlib import FontLibrary
fontlib = FontLibrary(fs, ['/v999', '/'])
utils.mem('start3')

import matrix_frame
utils.mem('start4')
frame = matrix_frame.new_display_frame(192, 32, 16, fontlib)
utils.mem('start5')

import board, gpio
utils.mem('start5')
up = gpio.Button(board.BUTTON_UP)
down = gpio.Button(board.BUTTON_DOWN)
enter = gpio.Button(board.A4)
brightness = gpio.AnalogInput(board.A1)
selector = gpio.RotaryInput(board.A2, board.A3)
utils.mem('start6')

from esp_wifi_network import EspWifiNetwork
utils.mem('start7')
network = EspWifiNetwork()
utils.mem('start8')

from $module import run
utils.mem('start9')
run(
    fs,
    network,
    frame,
    {'UP': up, 'DOWN': down, 'ENTER': enter},
    {'BRIGHTNESS': brightness, 'SELECTOR': selector}
)
EOF

touch $target/v999/@VALID
touch $target/v999/@ENABLED
sync
echo 'All done!'
